service: todo-app

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-south-1
  stage: ${opt:stage, 'dev'}
  environment:
    MONGODB_URI: ${env:MONGODB_URI, '${ssm:/todoapp/${self:provider.stage}/MONGODB_URI}'}
    JWT_SECRET: ${env:JWT_SECRET, '${ssm:/todoapp/${self:provider.stage}/JWT_SECRET}'}

useDotenv: true

plugins:
  - serverless-offline
  - serverless-dotenv-plugin

functions:
  authorizer:
    handler: src/handlers/authorizer.handler

  loginUser:
    handler: src/handlers/auth.loginUser
    events:
      - http:
          path: auth/login
          method: post
  registerUser:
    handler: src/handlers/auth.registerUser
    events:
      - http:
          path: auth/register
          method: post
  createTodo:
    handler: src/handlers/todo.createTodo
    events:
      - http:
          path: todos
          method: post
          authorizer: authorizer
  getTodos:
    handler: src/handlers/todo.getTodos
    events:
      - http:
          path: todos
          method: get
          authorizer: authorizer

  updateTodo:
    handler: src/handlers/todo.updateTodo
    events:
      - http:
          path: todos/{id}
          method: put
          authorizer: authorizer

  deleteTodo:
    handler: src/handlers/todo.deleteTodo
    events:
      - http:
          path: todos/{id}
          method: delete
          authorizer: authorizer
